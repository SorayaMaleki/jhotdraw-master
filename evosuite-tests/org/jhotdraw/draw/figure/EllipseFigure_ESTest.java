/*
 * This file was automatically generated by EvoSuite
 * Sat Jun 12 15:59:08 GMT 2021
 */

package org.jhotdraw.draw.figure;

import org.junit.Test;
import static org.junit.Assert.*;
import static org.evosuite.runtime.EvoAssertions.*;
import java.awt.Dimension;
import java.awt.Graphics2D;
import java.awt.geom.AffineTransform;
import java.awt.geom.Ellipse2D;
import java.awt.geom.Point2D;
import java.awt.geom.Rectangle2D;
import java.awt.image.BufferedImage;
import java.util.ArrayList;
import java.util.LinkedList;
import java.util.List;
import org.evosuite.runtime.EvoRunner;
import org.evosuite.runtime.EvoRunnerParameters;
import org.jhotdraw.draw.DefaultDrawing;
import org.jhotdraw.draw.Drawing;
import org.jhotdraw.draw.connector.ChopDiamondConnector;
import org.jhotdraw.draw.connector.ChopEllipseConnector;
import org.jhotdraw.draw.figure.EllipseFigure;
import org.jhotdraw.draw.figure.Figure;
import org.jhotdraw.draw.figure.GroupFigure;
import org.jhotdraw.draw.figure.LabeledLineConnectionFigure;
import org.jhotdraw.draw.figure.ListFigure;
import org.jhotdraw.draw.io.ImageOutputFormat;
import org.jhotdraw.draw.locator.RelativeDecoratorLocator;
import org.junit.runner.RunWith;
import sun.java2d.SunGraphics2D;

@RunWith(EvoRunner.class) @EvoRunnerParameters(mockJVMNonDeterminism = true, useVFS = true, useVNET = true, resetStaticState = true, separateClassLoader = true, useJEE = true) 
public class EllipseFigure_ESTest extends EllipseFigure_ESTest_scaffolding {

  @Test(timeout = 4000)
  public void test00()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(303.280635283345, 0.0, 1.0, 0.0);
      ImageOutputFormat imageOutputFormat0 = new ImageOutputFormat();
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      LinkedList<Figure> linkedList0 = new LinkedList<Figure>();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(74);
      Dimension dimension0 = new Dimension(74, 74);
      BufferedImage bufferedImage0 = imageOutputFormat0.toImage((Drawing) defaultDrawing0, (List<Figure>) linkedList0, affineTransform0, dimension0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ellipseFigure0.drawStroke(sunGraphics2D0);
      assertEquals((-1), sunGraphics2D0.eargb);
  }

  @Test(timeout = 4000)
  public void test01()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(0.0, 0.0, (-1056.721424), 303.280635283345);
      ImageOutputFormat imageOutputFormat0 = new ImageOutputFormat();
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      LinkedList<Figure> linkedList0 = new LinkedList<Figure>();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(74);
      Dimension dimension0 = new Dimension(74, 74);
      BufferedImage bufferedImage0 = imageOutputFormat0.toImage((Drawing) defaultDrawing0, (List<Figure>) linkedList0, affineTransform0, dimension0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ellipseFigure0.drawStroke(sunGraphics2D0);
      assertEquals(0, sunGraphics2D0.constrainY);
  }

  @Test(timeout = 4000)
  public void test02()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(303.280635283345, 0.0, 1.0, 0.0);
      ImageOutputFormat imageOutputFormat0 = new ImageOutputFormat();
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      LinkedList<Figure> linkedList0 = new LinkedList<Figure>();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(74);
      Dimension dimension0 = new Dimension(74, 74);
      BufferedImage bufferedImage0 = imageOutputFormat0.toImage((Drawing) defaultDrawing0, (List<Figure>) linkedList0, affineTransform0, dimension0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ellipseFigure0.drawFill(sunGraphics2D0);
      assertEquals(0, sunGraphics2D0.clipState);
  }

  @Test(timeout = 4000)
  public void test03()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(10.0, (-1056.721424), (-1056.721424), 2436.51036618818);
      ImageOutputFormat imageOutputFormat0 = new ImageOutputFormat();
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      GroupFigure groupFigure0 = new GroupFigure();
      ArrayList<Figure> arrayList0 = groupFigure0.children;
      BufferedImage bufferedImage0 = imageOutputFormat0.toImage((Drawing) defaultDrawing0, (List<Figure>) arrayList0, 2.0, true);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ellipseFigure0.drawFill(sunGraphics2D0);
      assertEquals(0, sunGraphics2D0.constrainX);
  }

  @Test(timeout = 4000)
  public void test04()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(195225787, (-1056.721424), (-1056.721424));
      ellipseFigure0.transform(affineTransform0);
      assertEquals(0, ellipseFigure0.getLayer());
  }

  @Test(timeout = 4000)
  public void test05()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(28.4616298844, 28.4616298844, 28.4616298844, 28.4616298844);
      Rectangle2D.Double rectangle2D_Double0 = ellipseFigure0.getDrawingArea();
      assertEquals(58.4232597688, rectangle2D_Double0.getMaxY(), 0.01);
      assertEquals(58.4232597688, rectangle2D_Double0.getMaxX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test06()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(10.0, (-1056.721424), (-1056.721424), 2436.51036618818);
      RelativeDecoratorLocator relativeDecoratorLocator0 = new RelativeDecoratorLocator();
      Point2D.Double point2D_Double0 = relativeDecoratorLocator0.locate((Figure) ellipseFigure0);
      ellipseFigure0.setBounds(point2D_Double0, point2D_Double0);
      Rectangle2D.Double rectangle2D_Double0 = ellipseFigure0.getDrawingArea();
      assertEquals(11.6, rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals((-1055.1214240000002), rectangle2D_Double0.getMaxY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test07()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure((-2141.3686856148825), 0.1, 0.1, 0.1);
      Rectangle2D.Double rectangle2D_Double0 = ellipseFigure0.getDrawingArea();
      assertEquals((-2139.7686856148825), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(1.7000000000000002, rectangle2D_Double0.getMaxY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test08()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(10.0, (-1056.721424), (-1056.721424), 2436.51036618818);
      RelativeDecoratorLocator relativeDecoratorLocator0 = new RelativeDecoratorLocator();
      Point2D.Double point2D_Double0 = relativeDecoratorLocator0.locate((Figure) ellipseFigure0);
      ellipseFigure0.setBounds(point2D_Double0, point2D_Double0);
      Rectangle2D.Double rectangle2D_Double0 = ellipseFigure0.getBounds();
      assertEquals((-1056.6714240000001), rectangle2D_Double0.getCenterY(), 0.01);
      assertEquals(10.1, rectangle2D_Double0.getMaxX(), 0.01);
  }

  @Test(timeout = 4000)
  public void test09()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      RelativeDecoratorLocator relativeDecoratorLocator0 = new RelativeDecoratorLocator();
      Point2D.Double point2D_Double0 = relativeDecoratorLocator0.locate((Figure) ellipseFigure0);
      ellipseFigure0.setBounds(point2D_Double0, point2D_Double0);
      Rectangle2D.Double rectangle2D_Double0 = ellipseFigure0.getBounds();
      assertEquals(0.1, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
      assertEquals(0.1, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
  }

  @Test(timeout = 4000)
  public void test10()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure((-2141.3686856148825), 0.1, 0.1, 0.1);
      Rectangle2D.Double rectangle2D_Double0 = ellipseFigure0.getBounds();
      assertEquals((-2141.2686856148825), rectangle2D_Double0.getMaxX(), 0.01);
      assertEquals(0.2, rectangle2D_Double0.getMaxY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test11()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      ListFigure listFigure0 = new ListFigure();
      Point2D.Double point2D_Double0 = ellipseFigure0.getEndPoint();
      Point2D.Double point2D_Double1 = listFigure0.chop(point2D_Double0);
      boolean boolean0 = ellipseFigure0.contains(point2D_Double1);
      assertFalse(boolean0);
  }

  @Test(timeout = 4000)
  public void test12()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      ellipseFigure0.setVisible(false);
      EllipseFigure ellipseFigure1 = ellipseFigure0.clone();
      assertNotSame(ellipseFigure1, ellipseFigure0);
  }

  @Test(timeout = 4000)
  public void test13()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(0.0, 0.0, 0.0, (-146.75));
      ellipseFigure0.setConnectable(false);
      EllipseFigure ellipseFigure1 = ellipseFigure0.clone();
      assertNotSame(ellipseFigure1, ellipseFigure0);
  }

  @Test(timeout = 4000)
  public void test14()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      // Undeclared exception!
      try { 
        ellipseFigure0.setBounds((Point2D.Double) null, (Point2D.Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.figure.EllipseFigure", e);
      }
  }

  @Test(timeout = 4000)
  public void test15()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      // Undeclared exception!
      try { 
        ellipseFigure0.restoreTransformTo((Object) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.figure.EllipseFigure", e);
      }
  }

  @Test(timeout = 4000)
  public void test16()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      Point2D.Double point2D_Double0 = defaultDrawing0.getEndPoint();
      // Undeclared exception!
      try { 
        ellipseFigure0.restoreTransformTo(point2D_Double0);
        fail("Expecting exception: ClassCastException");
      
      } catch(ClassCastException e) {
         //
         // java.awt.geom.Point2D$Double cannot be cast to java.awt.geom.Ellipse2D$Double
         //
         verifyException("org.jhotdraw.draw.figure.EllipseFigure", e);
      }
  }

  @Test(timeout = 4000)
  public void test17()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(2065.4116211, (-0.42607961608453615), 0.0, 2065.4116211);
      // Undeclared exception!
      try { 
        ellipseFigure0.drawStroke((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.AttributeKeys", e);
      }
  }

  @Test(timeout = 4000)
  public void test18()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      // Undeclared exception!
      try { 
        ellipseFigure0.drawFill((Graphics2D) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.AttributeKeys", e);
      }
  }

  @Test(timeout = 4000)
  public void test19()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(0.0, 3964.74, 1137.983705018542, 1.5);
      // Undeclared exception!
      try { 
        ellipseFigure0.contains((Point2D.Double) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("java.awt.geom.RectangularShape", e);
      }
  }

  @Test(timeout = 4000)
  public void test20()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      Rectangle2D.Double rectangle2D_Double0 = ellipseFigure0.getBounds();
      assertEquals(0.0, rectangle2D_Double0.width, 0.01);
      assertEquals(0.0, rectangle2D_Double0.height, 0.01);
      assertEquals(0.0, rectangle2D_Double0.y, 0.01);
      assertEquals(0.0, rectangle2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test21()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(303.280635283345, (-11.937447547312184), 1.0, (-11.937447547312184));
      ImageOutputFormat imageOutputFormat0 = new ImageOutputFormat();
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      LinkedList<Figure> linkedList0 = new LinkedList<Figure>();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(74);
      Dimension dimension0 = new Dimension(74, 74);
      BufferedImage bufferedImage0 = imageOutputFormat0.toImage((Drawing) defaultDrawing0, (List<Figure>) linkedList0, affineTransform0, dimension0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ellipseFigure0.drawStroke(sunGraphics2D0);
      assertEquals(1, sunGraphics2D0.interpolationType);
  }

  @Test(timeout = 4000)
  public void test22()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      RelativeDecoratorLocator relativeDecoratorLocator0 = new RelativeDecoratorLocator();
      Point2D.Double point2D_Double0 = relativeDecoratorLocator0.locate((Figure) ellipseFigure0);
      ellipseFigure0.setBounds(point2D_Double0, point2D_Double0);
      ImageOutputFormat imageOutputFormat0 = new ImageOutputFormat();
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      GroupFigure groupFigure0 = new GroupFigure();
      ArrayList<Figure> arrayList0 = groupFigure0.children;
      BufferedImage bufferedImage0 = imageOutputFormat0.toImage((Drawing) defaultDrawing0, (List<Figure>) arrayList0, 2.0, true);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ellipseFigure0.drawStroke(graphics2D0);
      assertTrue(ellipseFigure0.isConnectable());
  }

  @Test(timeout = 4000)
  public void test23()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(0.0, 0.0, 0.0, 2216.8);
      ImageOutputFormat imageOutputFormat0 = new ImageOutputFormat("", "", "lu'&_?gd^A=J,;1e", 8);
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      BufferedImage bufferedImage0 = imageOutputFormat0.toImage((Drawing) defaultDrawing0, (List<Figure>) null, 2216.8, false);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ellipseFigure0.drawStroke(sunGraphics2D0);
      assertEquals(0, sunGraphics2D0.textAntialiasHint);
  }

  @Test(timeout = 4000)
  public void test24()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(303.280635283345, (-11.937447547312184), 1.0, (-11.937447547312184));
      ImageOutputFormat imageOutputFormat0 = new ImageOutputFormat();
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      LinkedList<Figure> linkedList0 = new LinkedList<Figure>();
      AffineTransform affineTransform0 = AffineTransform.getQuadrantRotateInstance(74);
      Dimension dimension0 = new Dimension(74, 74);
      BufferedImage bufferedImage0 = imageOutputFormat0.toImage((Drawing) defaultDrawing0, (List<Figure>) linkedList0, affineTransform0, dimension0);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ellipseFigure0.drawFill(sunGraphics2D0);
      assertEquals(0, sunGraphics2D0.constrainY);
  }

  @Test(timeout = 4000)
  public void test25()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      RelativeDecoratorLocator relativeDecoratorLocator0 = new RelativeDecoratorLocator();
      Point2D.Double point2D_Double0 = relativeDecoratorLocator0.locate((Figure) ellipseFigure0);
      ellipseFigure0.setBounds(point2D_Double0, point2D_Double0);
      ImageOutputFormat imageOutputFormat0 = new ImageOutputFormat();
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      GroupFigure groupFigure0 = new GroupFigure();
      ArrayList<Figure> arrayList0 = groupFigure0.children;
      BufferedImage bufferedImage0 = imageOutputFormat0.toImage((Drawing) defaultDrawing0, (List<Figure>) arrayList0, 2.0, true);
      SunGraphics2D sunGraphics2D0 = (SunGraphics2D)bufferedImage0.createGraphics();
      ellipseFigure0.drawFill(sunGraphics2D0);
      assertEquals(0, sunGraphics2D0.transformState);
  }

  @Test(timeout = 4000)
  public void test26()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      ImageOutputFormat imageOutputFormat0 = new ImageOutputFormat();
      DefaultDrawing defaultDrawing0 = new DefaultDrawing();
      GroupFigure groupFigure0 = new GroupFigure();
      ArrayList<Figure> arrayList0 = groupFigure0.children;
      BufferedImage bufferedImage0 = imageOutputFormat0.toImage((Drawing) defaultDrawing0, (List<Figure>) arrayList0, 0.0, false);
      Graphics2D graphics2D0 = bufferedImage0.createGraphics();
      ellipseFigure0.drawFill(graphics2D0);
      assertTrue(ellipseFigure0.isVisible());
  }

  @Test(timeout = 4000)
  public void test27()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      Rectangle2D.Double rectangle2D_Double0 = ellipseFigure0.getDrawingArea();
      assertEquals((-1.5), rectangle2D_Double0.y, 0.01);
      assertEquals((-1.5), rectangle2D_Double0.x, 0.01);
  }

  @Test(timeout = 4000)
  public void test28()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      Point2D.Double point2D_Double0 = ellipseFigure0.getEndPoint();
      boolean boolean0 = ellipseFigure0.contains(point2D_Double0);
      assertTrue(boolean0);
  }

  @Test(timeout = 4000)
  public void test29()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      LabeledLineConnectionFigure labeledLineConnectionFigure0 = new LabeledLineConnectionFigure();
      Point2D.Double point2D_Double0 = ellipseFigure0.getEndPoint();
      ChopEllipseConnector chopEllipseConnector0 = (ChopEllipseConnector)ellipseFigure0.findConnector(point2D_Double0, labeledLineConnectionFigure0);
      assertFalse(chopEllipseConnector0.isConnectToDecorator());
  }

  @Test(timeout = 4000)
  public void test30()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(0.0, 0.0, 0.0, 2216.8);
      ChopDiamondConnector chopDiamondConnector0 = new ChopDiamondConnector(ellipseFigure0);
      ChopEllipseConnector chopEllipseConnector0 = (ChopEllipseConnector)ellipseFigure0.findCompatibleConnector(chopDiamondConnector0, false);
      assertFalse(chopEllipseConnector0.isConnectToDecorator());
  }

  @Test(timeout = 4000)
  public void test31()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure(2065.4116211, (-0.42607961608453615), 0.0, 2065.4116211);
      Ellipse2D.Double ellipse2D_Double0 = (Ellipse2D.Double)ellipseFigure0.getTransformRestoreData();
      ellipseFigure0.restoreTransformTo(ellipse2D_Double0);
      assertEquals(1032.2797309339155, ellipse2D_Double0.getCenterY(), 0.01);
      assertEquals(0.0, ellipse2D_Double0.width, 0.01);
      assertEquals(2065.4116211, ellipse2D_Double0.getMaxX(), 0.01);
      assertEquals(2064.9855414839153, ellipse2D_Double0.getMaxY(), 0.01);
  }

  @Test(timeout = 4000)
  public void test32()  throws Throwable  {
      EllipseFigure ellipseFigure0 = new EllipseFigure();
      // Undeclared exception!
      try { 
        ellipseFigure0.transform((AffineTransform) null);
        fail("Expecting exception: NullPointerException");
      
      } catch(NullPointerException e) {
         //
         // no message in exception (getMessage() returned null)
         //
         verifyException("org.jhotdraw.draw.figure.EllipseFigure", e);
      }
  }
}
